# This is a basic workflow to help you get started with Actions

name: print echo jq

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  pull_request_target:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  automerge:
    name: Automerge
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      # Pass output between steps
      - # Syntax is ::set-output name=< var name >::< var value >
        id: set_output
        name: Set output
        run: echo ::set-output name=var_name::example_value
      - # Syntax is env: < var name >: ${{ steps.< step.id >.outputs.< var name > }}
        id: get_output
        name: Get output
        env:
          var: ${{ steps.set_output.outputs.var_name }}
        run: echo $var

      - # Curl pull request files
        id: files
        name: files
        run: |
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[]')
          file_number=${#FILES[@]}
          echo "number of files: ${#FILES[@]} ${file_number}"
          filename=$(echo $FILES | jq '.filename')
          echo "filename: $filename"
          status=$(echo $FILES | jq '.status')
          echo "status: $status"
          echo "filename property
          echo "github.actor: ${{ github.actor }}"
      - id: automerge
        name: automerge
        uses: pascalgn/automerge-action@v0.12.0
        env:
          MERGE_LABELS: ""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump github.event.pull_request object
        run: |
          echo "github.event.pull_request.changed_files: ${{ github.event.pull_request.changed_files }}"
          echo "github.event.pull_request.additions: ${{ github.event.pull_request.additions }}"
          echo "github.event.pull_request.deletions: ${{ github.event.pull_request.deletions }}"
          echo "github.event.pull_request.author_association: ${{ github.event.pull_request.author_association }}"
          echo "github.event.pull_request.head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "github.event.pull_request.head.repo.fork: ${{ github.event.pull_request.head.repo.fork }}"
      - name: exit success
        run: exit 0
      - name: exit error
        run: exit 1
